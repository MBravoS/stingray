OVERVIEW
====================================================================================================================

Stingray is a suite of Fortran routines to produce mock observing cones from semi-analytic models (SAMs).

V0.1 13/03/2018: First release

Copyright Danail Obreschkow (danail.obreschkow@icrar.org)


GETTING STARTED
====================================================================================================================

1) Make sure gfortran is installed (code tested for gfortran 4.4.7 and 5.0.0)

2) Compile Stingray using
   > make clean
   > make (edit make file, if needed)
   
3) In the file parameters.txt, adjust the paths path_output and path_input to the preferred directories for output
   and input data. Both directories should be empty and their permission must be set such that Stingray can read
   and white in them. If the directories to not exist, Stingray will create them.

4) Produce fake data (i.e. snapshots and redshift list) in the input-directory
   > ./stingray make.fake.data
   
5) Produce mock observing cone
   > ./stingray make.all
   
6) In R, set the variable path.output to the same as path_output in the parameter-file.

7) Display the cone in R
   > ...
   
   
PROCESS NEW GALAXY DATA
====================================================================================================================

1) Edit parameter.txt

2) Edit module_user.f90

3) Produce mock observing cone
   > ./stingray make.all
   
4) e.g. display cone in R


ARGUMENTS
====================================================================================================================

Generally, Stingray is called as
> ./stingray routine [-option argument] [-option argument] ...

The routines to choose from are
+ make.geometry
+ make.cone.intrinsic
+ make.cone.apparent
+ make.all = previous three together
+ make.fake.data

Optional arguments:

-parameterfile (default parameters.txt): path+filename of parameter-file

-logfile (default none) allows the user to specify a path+filename for the screen-log, which is particularly usefull
 if the code is executed using a queueing system
 
-version: returns the version of SurfSuite

-ngalaxies (default 100): used only by make.fake.data, number of galaxies per snapshot